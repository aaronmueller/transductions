# Withholds syntacically ("P verbs herself") and semantically ("P verbs P")
# sentences involving 14 antecedents from training. Extension of alice-2 dataset
# to withhold "Alice", "Claire", "Eliza", "Grace", "Isla", "Katherine",
# "Margaret", "Neha", "Patricia", "Rachael", "Tracy", "Ursula",
# "Winnifred", "Yvette" reflexives.

defaults:
  - tracking: all-feminine-reflexive

name: alice-3-14
input: grammar-1.tsv # where is the full dataset
source_format: sequence # 'sequence' or 'tree'
target_format: sequence # 'sequence' or 'tree'
overwrite: True # Always re-create splits from raw data?
transform_field: source # 'source' or 'target', which should include transforms?

splits:
  train: 80
  test: 10
  val: 10

# Defines the generalization set. All inputs which match the provided
# regex will be withheld from the train/test/val splits.
withholding: 
  - 'Alice \w+ (herself|Alice)'
  - 'Claire \w+ (herself|Claire)'
  - 'Eliza \w+ (herself|Eliza)'
  - 'Grace \w+ (herself|Grace)'
  - 'Isla \w+ (herself|Isla)'
  - 'Katherine \w+ (herself|Katherine)'
  - 'Margaret \w+ (herself|Margaret)'
  - 'Neha \w+ (herself|Neha)'
  - 'Patricia \w+ (herself|Patricia)'
  - 'Rachael \w+ (herself|Rachael)'
  - 'Tracy \w+ (herself|Tracy)'
  - 'Ursula \w+ (herself|Ursula)'
  - 'Winnifred \w+ (herself|Winnifred)'
  - 'Yvette \w+ (herself|Yvette)'

# Defines named test sets. For each entry, a .pt file will be created 
# containing all inputs which match the given regex.
tracking:
  alice_subject: '^Alice.*'
  alice_object: '^\w+ \w+ Alice.*'
  alice_subject_transitive: '^Alice \w+ \w+'
  alice_subject_intransitive: '^Alice \w+\t'

  herself: 'herself'
  himself: 'himself'