# @package _group_

# Withholds syntacically ("P verbs herself") and semantically ("P verbs P")
# sentences involving 2 antecedents from training. Extension of alice-2 dataset
# to withhold "Alice", "Claire", "Eliza" reflexives.

name: alice-3-13
input: grammar-1.tsv # where is the full dataset
source_format: sequence # 'sequence' or 'tree'
target_format: sequence # 'sequence' or 'tree'
overwrite: True # Always re-create splits from raw data?
transform_field: source # 'source' or 'target', which should include transforms?

splits:
  train: 80
  test: 10
  val: 10

# Defines the generalization set. All inputs which match the provided
# regex will be withheld from the train/test/val splits.
withholding: 
  - 'Alice \w+ (herself|Alice)'
  - 'Claire \w+ (herself|Claire)'
  - 'Eliza \w+ (herself|Eliza)'
  - 'Grace \w+ (herself|Grace)'
  - 'Isla \w+ (herself|Isla)'
  - 'Katherine \w+ (herself|Katherine)'
  - 'Margaret \w+ (herself|Margaret)'
  - 'Neha \w+ (herself|Neha)'
  - 'Patricia \w+ (herself|Patricia)'
  - 'Rachael \w+ (herself|Rachael)'
  - 'Tracy \w+ (herself|Tracy)'
  - 'Ursula \w+ (herself|Ursula)'
  - 'Winnifred \w+ (herself|Winnifred)'

# Defines named test sets. For each entry, a .pt file will be created 
# containing all inputs which match the given regex.
tracking:
  alice_subject: '^Alice.*'
  alice_object: '^\w+ \w+ Alice.*'
  alice_subject_transitive: '^Alice \w+ \w+'
  alice_subject_intransitive: '^Alice \w+\t'

  alice_reflexive: 'Alice \w+ herself'
  alice_alice: 'Alice \w+ Alice'
  claire_reflexive: 'Claire \w+ herself'
  claire_claire: 'Claire \w+ Claire'
  eliza_reflexive: 'Eliza \w+ herself'
  eliza_eliza: 'Eliza \w+ Eliza'
  grace_reflexive: 'Grace \w+ herself'
  grace_grace: 'Grace \w+ Grace'
  isla_reflexive: 'Isla \w+ herself'
  isla_isla: 'Isla \w+ Isla'
  katherine_reflexive: 'Katherine \w+ herself'
  katherine_katherine: 'Katherine \w+ Katherine'
  margaret_herself: 'Margaret \w+ herself'
  margaret_margaret: 'Margaret \w+ Margaret'
  neha_herself: 'Neha \w+ herself'
  neha_neha: 'Neha \w+ Neha'
  patricia_herself: 'Patricia \w+ herself'
  patricia_patricia: 'Patricia \w+ Patricia'
  rachael_herself: 'Rachael \w+ herself'
  rachael_rachael: 'Rachael \w+ Rachael'
  tracy_herself: 'Tracy \w+ herself'
  tracy_tracy: 'Tracy \w+ Tracy'
  ursula_herself: 'Ursula \w+ herself'
  ursula_ursula: 'Ursula \w+ Ursula'
  winnifred_herself: 'Winnifred \w+ herself'
  winnifred_winnifred: 'Winnifred \w+ Winnifred'
  yvette_herself: 'Yvette \w+ herself'
  yvette_yvette: 'Yvette \w+ Yvette'
  zelda_herself: 'Zelda \w+ herself'
  zelda_zelda: 'Zelda \w+ Zelda'

  herself: 'herself'
  himself: 'himself'